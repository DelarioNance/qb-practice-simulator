<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Match Page</title>
    <link rel="stylesheet" href="styles/styles.css">
  </head>

  <body id="main-body">
    <div id="navbar">
      <a id="home" href="/index.html">Home</a>
      <a id="playerStats" href="/playerStats.html">Player Stats</a>
      <a id="register" href="/register.html">Register</a>
    </div>

    <section id="content-section">

      <h2>
        <span id="greetingsMessage">Greetings! To start the match, 
        click the "Get Next Tossup" button below! Before additional clicks of "Get Next Tossup" button, 
        remember to enter the points of the players who got the tossup or negged!
        </span>
      </h2>

      <h2>
        <span id="tossupHeading">Tossup <span id="tossupNumber">0</span>
        <span id="tossupCategory"></span> <span id="tossupSubcategory"></span>
      </h2>

      <div id="tossupTextAndAnswer">
        <p id="tossupText"></p>
        <p id="paragraphForTossupAnswer"><b>ANSWER:</b> <span id="tossupAnswer"></span></p>
      </div>

      
      <p>Players in Match:</p>
    <table id="playerScoresTable">
      <tr>
        <th colspan="2"><%= results[0].name %></th>
        <th colspan="2"><%= results[results.length-1].name %></th>
      </tr>
      
      <% let t = 0 %>
      <% let b = results.length - 1 %>
      <% var homePlayer = "" %>
      <% var awayPlayer = "" %>
      <% while(t <= b) { %>
        <tr>
          <% if(results[t].name == results[0].name){ %>
            <%= homePlayer = results[t].username %>
            <% t++ %>
          <% } %>
    
          <% if(results[b].name == results[results.length-1].name){ %>
            <%= awayPlayer = results[b].username %>
            <% b-- %>
          <% } %>
    
          <td id="playerName"><%= homePlayer %></td>
          <td>
            <select id="<%=homePlayer %>" class="small-dropdown">
              <option value="0" selected></option>
              <option value="-5">-5</option>
              <option value="10">10</option>
              <option value="15">15</option>
            </select>
          </td>
          <td><%= awayPlayer %></td>
          <td>
            <select id="<%=awayPlayer %>" class="small-dropdown">
              <option value="0" selected></option>
              <option value="-5">-5</option>
              <option value="10">10</option>
              <option value="15">15</option>
            </select>
          </td>
    
          <% var homePlayer = "" %>
          <% var awayPlayer = "" %>
        </tr>
      <% } %>
    </table>

    <div id="buttonContainer">
      <button onclick="getTossup()">Get Next Tossup</button>
    </div>

    </section>
  </body>
</html>


<script>
    function saveValue(dropdown) {
      var selectedValue = dropdown.value;
      var dropdownId = dropdown.id;

      // Save the selected value in the browser's localStorage
      localStorage.setItem(dropdownId, selectedValue);
    }

    function getAllSavedValues() {
      // Retrieve all saved values from localStorage
      var savedValues = {};

      for (var i = 0; i < localStorage.length; i++) {
        var key = localStorage.key(i);
        savedValues[key] = localStorage.getItem(key);
      }
    }

    // Function to handle the API call
    function getTossup() {

      var xhr = new XMLHttpRequest();
      xhr.open('GET', 'https://www.qbreader.org/api/random-tossup', true);
      xhr.onreadystatechange = function () {
        if (xhr.readyState === XMLHttpRequest.DONE) {
        if (xhr.status === 200) {
          var data = JSON.parse(xhr.responseText);
          let category = data.tossups[0]["category"];
          let subCategory = data.tossups[0]["subcategory"];
          let tossupText =  data.tossups[0]["question"];
          let tossupAnswer = data.tossups[0]["answer"];
          document.getElementById("tossupText").innerHTML = boldPowerText(tossupText);
          document.getElementById("tossupAnswer").innerHTML = tossupAnswer;
          document.getElementById("tossupCategory").innerText = "- " + category
          document.getElementById("tossupSubcategory").innerText = "(" + subCategory + ")"
          // Process and use the retrieved data in your application
        } else {
          console.error('Error:', xhr.status);
        }
        }
      };
      
      xhr.send();
    
      updateStylingForTossup()    

      // Update the scores in the database
      updateScores();

      // Reset all dropdowns to their initial state
      var dropdowns = document.querySelectorAll('.small-dropdown');
      dropdowns.forEach(function(dropdown) {
        dropdown.selectedIndex = 0; // Set to the first option (hidden option)
      });
    }

    function updateStylingForTossup() {
      // Make the initial greeting message invisible
      var greetingsElement = document.getElementById("greetingsMessage")
      greetingsElement.style.display = "none"

      // Make the tossup heading invisible
      document.getElementById("tossupHeading").style.display = "none"

      // Update the Tossup number
      var tossupNumberElement = document.getElementById("tossupNumber")
      var currentTossupNumber = parseInt(tossupNumberElement.innerText, 10)
      var nextTossupNumber = currentTossupNumber + 1
      tossupNumberElement.innerText = nextTossupNumber

      // Make the tossup heading visible
      tossupHeading.style.display = "inline"   

      // Make the tossup answerline visible
      var paragraphForTossupAnswer = document.getElementById("paragraphForTossupAnswer")
      paragraphForTossupAnswer.style.display = "inline"
      
      // Put border around table
      var tossupTextAndAnswerElement = document.getElementById("tossupTextAndAnswer")
      tossupTextAndAnswerElement.style.border = "2px solid black";
    }

    function boldPowerText(tossupText) {
      if (tossupText.includes("(*)")) { // might not work on old browsers
        return "<b>" + tossupText.replace("(*)", "(*)</b>")
      }
      return tossupText
    }

    function updateScores() {
      var table = document.getElementById("playerScoresTable")
      for (var i = 1; i < 6 ; i++) {
        playerRow = table.rows[i]
        
        if (playerRow.cells[0].innerText != "") {
          homeTeamPlayerCell = playerRow.cells[1]
          homeTeamPlayerDropdown = homeTeamPlayerCell.getElementsByTagName("select")[0]
          updatePlayerScore(homeTeamPlayerDropdown);
        }

        if (playerRow.cells[2].innerText != "") {
          awayTeamPlayerCell = playerRow.cells[3]
          awayTeamPlayerDropdown = awayTeamPlayerCell.getElementsByTagName("select")[0]
          updatePlayerScore(awayTeamPlayerDropdown);
        }
      }
	  }

    function updatePlayerScore(playerDropdown) {
      let playerPoints = playerDropdown.value
           
      let username = playerDropdown.id;
      let matchID = <%= results[0].match_id %> // ignore red lines; still works

      let numPowersOnTossup = (playerPoints == 15) ? 1 : 0;
      let numTensOnTossup = (playerPoints == 10) ? 1 : 0;
      let numNegsOnTossup = (playerPoints == -5) ? 1 : 0;
      
      const responsePromise = fetch("/update-player-score/?username=" + username + 
                                                          "&matchID=" + matchID + 
                                                          "&numPowersOnTossup=" + numPowersOnTossup + 
                                                          "&numTensOnTossup=" + numTensOnTossup + 
                                                          "&numNegsOnTossup=" + numNegsOnTossup, {
        method: "GET",
        headers: {
          "Content-type": "application/json; charset=UTF-8"
        }
      });
    }

    // Attach the API call function to the button click event
    document.getElementById('getTossup').addEventListener('click', callAPI);
    


</script>